CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250730101709_postgresql.container_migration_476') THEN
    CREATE TABLE "Rooms" (
        "ID" integer GENERATED BY DEFAULT AS IDENTITY,
        "Description" text NOT NULL,
        "Price" numeric NOT NULL,
        CONSTRAINT "PK_Rooms" PRIMARY KEY ("ID")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250730101709_postgresql.container_migration_476') THEN
    CREATE TABLE "Users" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "IPAdress" text NOT NULL,
        "NickName" text NOT NULL,
        "Role" text NOT NULL,
        "Password" text NOT NULL,
        CONSTRAINT "PK_Users" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250730101709_postgresql.container_migration_476') THEN
    CREATE TABLE "Booking" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "InDate" timestamp with time zone NOT NULL,
        "OutDate" timestamp with time zone NOT NULL,
        "RoomID" integer,
        CONSTRAINT "PK_Booking" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_Booking_Rooms_RoomID" FOREIGN KEY ("RoomID") REFERENCES "Rooms" ("ID")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250730101709_postgresql.container_migration_476') THEN
    CREATE INDEX "IX_Booking_RoomID" ON "Booking" ("RoomID");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250730101709_postgresql.container_migration_476') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250730101709_postgresql.container_migration_476', '8.0.4');
    END IF;
END $EF$;
COMMIT;

